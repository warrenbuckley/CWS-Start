@inherits Umbraco.Web.Mvc.UmbracoViewPage<IEnumerable<IPublishedContent>>

@{
    var pages = Model;
    var currentPageID = UmbracoContext.Current.PageId ?? Umbraco.TypedContentAtRoot().Single(x => x.DocumentTypeAlias == "CWS-Home").Id;
    var currentPage = Umbraco.TypedContent(currentPageID);
}

<header class="navbar navbar-default navbar-fixed-top" role="navigation">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-ex1-collapse">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="/">CWS Start</a>
        </div>

        <nav class="collapse navbar-collapse bs-navbar-collapse">
            <ul class="nav navbar-nav">
                @foreach (var page in pages)
                {
                    var isSelected = page.IsAncestorOrSelf(currentPage, "active");
                    var hasChildren = page.Children.Any() ? "dropdown" : string.Empty;

                    var hideInNavi = Convert.ToBoolean(page.GetPropertyValue("hideInNavigationLoggedIn"));

                    //If member is logged in AND hide in navi is not true
                    if (Umbraco.MemberIsLoggedOn() && !hideInNavi)
                    {
                    @renderNaviItem(page, currentPage, isSelected, hasChildren);
                    }
                    else if (!Umbraco.MemberIsLoggedOn() && page.IsVisible())
                    {
                    @renderNaviItem(page, currentPage, isSelected, hasChildren);
                    }

                }

                @if (Umbraco.MemberIsLoggedOn())
                {
                    <li>
                        @Html.ActionLink("Logout", "Logout", "AuthSurface")
                    </li>
                }
            </ul>

            <form class="navbar-form navbar-right" role="search" action="/search" method="POST">
                <div class="form-group">
                    <input type="text" class="form-control" name="q" placeholder="Search" />
                </div>
                <button type="submit" class="btn btn-default">Search</button>
            </form>

        </nav>
        <!--/.nav-collapse -->
    </div>
</header>

@helper renderNaviItem(IPublishedContent page, IPublishedContent currentPage, HtmlString isSelected, string hasChildren)
{
    <li class="@isSelected @hasChildren">
        @if (page.Children.Any())
        {
            <a href="@page.Url" class="dropdown-toggle" data-toggle="dropdown">@page.Name <b class="caret"></b></a>
            <ul class="dropdown-menu">
                @foreach (var child in page.Children)
                {
                    var isChildSelected = child.IsAncestorOrSelf(currentPage, "active");
                                    
                    <li class="@isChildSelected">
                        <a href="@child.Url">@child.Name</a>
                    </li>
                }
            </ul>
        }
        else
        {
            <a href="@page.Url">@page.Name</a>
        }
    </li>
}